{"singlePage": [], "startSite": "06/21/2024", "filingNum": "", "onePageListNum": 15, "commentLabelColor": "#006b75", "yearColorList": ["#bc4c00", "#0969da", "#1f883d", "#A333D0"], "i18n": "CN", "themeMode": "manual", "dayTheme": "light", "nightTheme": "dark_colorblind", "urlMode": "pinyin", "script": "", "style": "", "head": "", "indexScript": "", "indexStyle": "", "bottomText": "\u2764\ufe0f \u8f6c\u8f7d\u6587\u7ae0\u8bf7\u6ce8\u660e\u51fa\u5904\uff0c\u8c22\u8c22\uff01\u2764\ufe0f", "showPostSource": 1, "iconList": {}, "UTC": 8, "rssSplit": "sentence", "exlink": {}, "needComment": 1, "allHead": "", "title": "DevOps Blog", "subTitle": "\u597d\u8bb0\u6027\u4e0d\u5982\u70c2\u7b14\u5934", "avatarUrl": "https://github.githubassets.com/favicons/favicon.svg", "GMEEK_VERSION": "last", "ogImage": "https://cdn.jsdelivr.net/gh/Meekdai/meekdai.github.io/logo64.jpg", "postListJson": {"P2": {"htmlDir": "docs/post/\u3010sftp\u3011sftp-lian-jie-shi-wu-fa-zhao-dao-pi-pei-de-zhu-ji-mi-yao-lei-xing.html", "labels": ["sftp"], "postTitle": "\u3010sftp\u3011sftp\u8fde\u63a5\u65f6\u65e0\u6cd5\u627e\u5230\u5339\u914d\u7684\u4e3b\u673a\u5bc6\u94a5\u7c7b\u578b", "postUrl": "post/%E3%80%90sftp%E3%80%91sftp-lian-jie-shi-wu-fa-zhao-dao-pi-pei-de-zhu-ji-mi-yao-lei-xing.html", "postSourceUrl": "https://github.com/JabinSun/jabinsun.github.io/issues/2", "commentNum": 0, "wordCount": 836, "description": "### \u62a5\u9519 \r\n\r\nUnable to negotiate with 1.1.1.1 port 22: no matching host key type found. Their offer: ssh-rsa,ssh-dss\r\n\r\n### \u73af\u5883\r\n\r\nCentOS\u7248\u672c\uff1aCentOS release 6.5 (Final)\r\nOpenSSH\u7248\u672c\uff1aOpenSSH_5.3p1, OpenSSL 1.0.1e-fips 11 Feb 2013\r\nOpenSSL\u7248\u672c\uff1aOpenSSL 1.0.1e-fips 11 Feb 2013\r\n\r\n### \u89e3\u51b3\r\n\r\n**\u65b9\u6cd5\u4e00\uff1a**\r\n\r\n\u751f\u6210\u548c\u4f7f\u7528 ECDSA \u6216 ED25519 \u4e3b\u673a\u5bc6\u94a5\r\n```shell\r\nssh-keygen -t ecdsa -f /etc/ssh/ssh_host_ecdsa_key -N ''\r\nssh-keygen -t ed25519 -f /etc/ssh/ssh_host_ed25519_key -N ''\r\n```\r\n\u7f16\u8f91 `/etc/ssh/sshd_config`\u6587\u4ef6\uff0c\u6dfb\u52a0\u751f\u6210\u7684\u5bc6\u94a5\r\n```shell\r\nHostKey /etc/ssh/ssh_host_rsa_key\r\nHostKey /etc/ssh/ssh_host_dsa_key\r\nHostKey /etc/ssh/ssh_host_ecdsa_key\r\nHostKey /etc/ssh/ssh_host_ed25519_key\r\n```\r\n\u91cd\u542fSSH\u670d\u52a1\r\n```shell\r\nservice sshd restart\r\n```\r\n\r\n**\u65b9\u6cd5\u4e8c\uff1a**\r\n\r\n\u5347\u7ea7 OpenSSH \u548c OpenSSL\r\n\r\n**\u65b9\u6cd5\u4e09\uff1a**\r\n\r\n\u5ba2\u6237\u7aef\u914d\u7f6e\u4e34\u65f6\u89e3\u51b3\u65b9\u6848\r\n```shell\r\nsftp -o HostKeyAlgorithms=ssh-rsa,ssh-dss username@hostname\r\n```\r\n\u3002", "top": 0, "createdAt": 1718939885, "style": "", "script": "", "head": "", "ogImage": "https://cdn.jsdelivr.net/gh/Meekdai/meekdai.github.io/logo64.jpg", "createdDate": "2024-06-21", "dateLabelColor": "#bc4c00"}, "P3": {"htmlDir": "docs/post/\u3010openssl\u3011openssl-sheng-cheng-sui-ji-mi-ma.html", "labels": ["openssl"], "postTitle": "\u3010openssl\u3011openssl\u751f\u6210\u968f\u673a\u5bc6\u7801", "postUrl": "post/%E3%80%90openssl%E3%80%91openssl-sheng-cheng-sui-ji-mi-ma.html", "postSourceUrl": "https://github.com/JabinSun/jabinsun.github.io/issues/3", "commentNum": 0, "wordCount": 46, "description": "```shell\r\n# \u968f\u673a\u5bc6\u7801\r\nopenssl rand -base64 12\r\n```\u3002", "top": 0, "createdAt": 1718953174, "style": "", "script": "", "head": "", "ogImage": "https://cdn.jsdelivr.net/gh/Meekdai/meekdai.github.io/logo64.jpg", "createdDate": "2024-06-21", "dateLabelColor": "#bc4c00"}, "P4": {"htmlDir": "docs/post/\u3010etcd\u3011etcd-bei-fen.html", "labels": ["etcd"], "postTitle": "\u3010etcd\u3011etcd\u5907\u4efd", "postUrl": "post/%E3%80%90etcd%E3%80%91etcd-bei-fen.html", "postSourceUrl": "https://github.com/JabinSun/jabinsun.github.io/issues/4", "commentNum": 0, "wordCount": 880, "description": "```shell\r\n#!/bin/bash\r\n# etcd backup\r\n# 0 */3 * * * /home/monitor/etcd_backup.sh >> /home/monitor/etcd_backup.log 2>&1\r\n   \r\nset -e \r\n   \r\nETCD_CA_CERT='/etc/kubernetes/pki/etcd/ca.crt'  \r\nETCD_CERT='/etc/kubernetes/pki/etcd/server.crt'  \r\nETCD_KEY='/etc/kubernetes/pki/etcd/server.key'  \r\nBACKUP_DIR='/var/lib/docker/etcd_backup'  \r\nDT=$(date +%Y%m%d.%H%M%S)  \r\n   \r\n[[ ! -d ${BACKUP_DIR} ]] && mkdir -p ${BACKUP_DIR}  \r\nfind ${BACKUP_DIR} -name '*.db' -mtime +7 -exec rm -f {} \\;  \r\n   \r\nETCDCTL_API=3 /usr/local/bin/etcdctl --endpoints=https://127.0.0.1:2379 \\  \r\n  --cacert='${ETCD_CA_CERT}' --cert='${ETCD_CERT}' --key='${ETCD_KEY}' \\  \r\n  snapshot save '${BACKUP_DIR}/etcd-snapshot-${DT}.db'  \r\n   \r\necho 'Etcd backup success, backup file: ${BACKUP_DIR}/etcd-snapshot-${DT}.db, \\  \r\n  file size: $(du -sh ${BACKUP_DIR}/etcd-snapshot-${DT}.db |awk '{print $1}')'  \r\necho\r\n```\u3002", "top": 0, "createdAt": 1718953769, "style": "", "script": "", "head": "", "ogImage": "https://cdn.jsdelivr.net/gh/Meekdai/meekdai.github.io/logo64.jpg", "createdDate": "2024-06-21", "dateLabelColor": "#bc4c00"}, "P5": {"htmlDir": "docs/post/\u3010jenkins\u3011jenkins-qing-li-duo-yu-job.html", "labels": ["jenkins"], "postTitle": "\u3010jenkins\u3011jenkins\u6e05\u7406\u591a\u4f59job", "postUrl": "post/%E3%80%90jenkins%E3%80%91jenkins-qing-li-duo-yu-job.html", "postSourceUrl": "https://github.com/JabinSun/jabinsun.github.io/issues/5", "commentNum": 0, "wordCount": 181, "description": "```shell\r\ndef jobName = 'item_name'\r\ndef maxNumber = 100\r\nJenkins.instance.getItemByFullName(jobName).builds.findAll {\r\n    it.number <= maxNumber\r\n}.each {\r\n    it.delete()\r\n}\r\n```\u3002", "top": 0, "createdAt": 1718954036, "style": "", "script": "", "head": "", "ogImage": "https://cdn.jsdelivr.net/gh/Meekdai/meekdai.github.io/logo64.jpg", "createdDate": "2024-06-21", "dateLabelColor": "#bc4c00"}, "P6": {"htmlDir": "docs/post/\u3010elasticsearch\u3011es-chang-yong-ming-ling.html", "labels": ["elasticsearch"], "postTitle": "\u3010elasticsearch\u3011es\u5e38\u7528\u547d\u4ee4", "postUrl": "post/%E3%80%90elasticsearch%E3%80%91es-chang-yong-ming-ling.html", "postSourceUrl": "https://github.com/JabinSun/jabinsun.github.io/issues/6", "commentNum": 0, "wordCount": 451, "description": "- \u68c0\u67e5es\u96c6\u7fa4\u72b6\u6001\r\n```shell\r\ncurl -XGET http://localhost:9200/_cluster/health\\?pretty\r\n```\r\n\r\n- \u5355\u8282\u70b9es\u526f\u672c\u5206\u7247\u8bbe\u4e3a0\r\n```shell\r\ncurl -XPUT 'http://localhost:9200/_settings' -H 'content-Type:application/json' -d'\r\n{\r\n    'number_of_replicas': 0\r\n}'\r\n```\r\n\r\n- \u67e5\u770bes\u6240\u6709\u7d22\u5f15\r\n```shell\r\ncurl -XGET http://localhost:9200/_cat/indices\r\n```\r\n\r\n- \u5220\u966430\u5929\u4e4b\u524d\u7d22\u5f15\r\n```shell\r\ndate=`date -d '-30 days' '+%Y.%m.%d'`\r\necho $date\r\n/usr/bin/curl -XDELETE 'http://localhost:9200/*-$date*'\r\n```\u3002", "top": 0, "createdAt": 1718954425, "style": "", "script": "", "head": "", "ogImage": "https://cdn.jsdelivr.net/gh/Meekdai/meekdai.github.io/logo64.jpg", "createdDate": "2024-06-21", "dateLabelColor": "#bc4c00"}, "P7": {"htmlDir": "docs/post/\u3010Dockerfile\u3011Dockerfile.crontab.html", "labels": ["Dockerfile", "crontab"], "postTitle": "\u3010Dockerfile\u3011Dockerfile.crontab", "postUrl": "post/%E3%80%90Dockerfile%E3%80%91Dockerfile.crontab.html", "postSourceUrl": "https://github.com/JabinSun/jabinsun.github.io/issues/7", "commentNum": 0, "wordCount": 759, "description": "```Dockerfile\r\nFROM alpine:latest\r\nENV SUPERCRONIC_URL=https://github.com/aptible/supercronic/releases/download/v0.1.12/supercronic-linux-amd64 \\\r\n    SUPERCRONIC=supercronic-linux-amd64 \\\r\n    SUPERCRONIC_SHA1SUM=048b95b48b708983effb2e5c935a1ef8483d9e3e\r\nRUN apk update \\\r\n    && apk --no-cache add curl \\\r\n    && curl -fsSLO '$SUPERCRONIC_URL' \\\r\n    && echo '${SUPERCRONIC_SHA1SUM}  ${SUPERCRONIC}' | sha1sum -c - \\\r\n    && chmod +x '$SUPERCRONIC' \\\r\n    && mv '$SUPERCRONIC' '/usr/local/bin/${SUPERCRONIC}' \\\r\n    && ln -s '/usr/local/bin/${SUPERCRONIC}' /usr/local/bin/supercronic\r\nCOPY cronfile /app/cronfile\r\n# RUN cron job\r\nCMD ['/usr/local/bin/supercronic', '-debug', '/app/cronfile']\r\n```\r\n\r\n```shell\r\necho '* * * * * date' >> /app/cronfile.log\r\n```\u3002", "top": 0, "createdAt": 1718955416, "style": "", "script": "", "head": "", "ogImage": "https://cdn.jsdelivr.net/gh/Meekdai/meekdai.github.io/logo64.jpg", "createdDate": "2024-06-21", "dateLabelColor": "#bc4c00"}, "P8": {"htmlDir": "docs/post/\u3010Docerfile\u3011Dockerfile.python.html", "labels": ["Dockerfile", "python"], "postTitle": "\u3010Docerfile\u3011Dockerfile.python", "postUrl": "post/%E3%80%90Docerfile%E3%80%91Dockerfile.python.html", "postSourceUrl": "https://github.com/JabinSun/jabinsun.github.io/issues/8", "commentNum": 0, "wordCount": 1489, "description": "```Dockerfile\r\nFROM python:3.10-slim AS builder\r\nENV PYTHONDONTWRITEBYTECODE=1\r\nENV PYTHONUNBUFFERED=1\r\nENV PATH='/app/venv/bin:$PATH'\r\nWORKDIR /app\r\nCOPY ./requirements.txt .\r\nRUN python3 -m venv /app/venv && \\\r\n    /app/venv/bin/pip install \\\r\n    -i https://mirrors.aliyun.com/pypi/simple \\\r\n    --no-warn-script-location \\\r\n    --no-cache-dir \\\r\n    -r requirements.txt\r\n\r\nFROM python:3.10-slim-buster\r\nENV PYTHONDONTWRITEBYTECODE=1\r\nENV PYTHONUNBUFFERED=1\r\nENV PATH='/app/venv/bin:$PATH'\r\nWORKDIR /app\r\nCOPY --from=builder /app/venv /app/venv\r\nCOPY . /app\r\nEXPOSE 5000\r\nCMD ['/app/venv/bin/gunicorn', 'app:app', '--bind', '0.0.0.0:5000']\r\n```\r\n\r\n```Dockerfile\r\n# python:<version>-slim / python:<version>-slim-bullseye / python:<version>-slim-buster\r\n# ${version} >> ${version}-slim > ${version}-slim-bullseye > ${version}-slim-buster\r\nFROM python:3.10-slim\r\nLABEL maintainer='xxx@gmail.com'\r\nEXPOSE 8000\r\n# Keeps Python from generating .pyc files in the container\r\nENV PYTHONDONTWRITEBYTECODE=1\r\n# Turns off buffering for easier container logging\r\nENV PYTHONUNBUFFERED=1\r\n# Install pip requirements\r\nCOPY requirements.txt .\r\nRUN python -m pip install --no-cache-dir --upgrade -r requirements.txt\r\nWORKDIR /app\r\nCOPY . /app\r\n# Creates a non-root user with an explicit UID and adds permission to access the /app folder\r\nRUN adduser -u 5678 --disabled-password --gecos '' appuser && chown -R appuser /app\r\nUSER appuser\r\nCMD ['uvicorn', 'shortener_app.main:app', '--host', '0.0.0.0']\r\n```\u3002", "top": 0, "createdAt": 1718955613, "style": "", "script": "", "head": "", "ogImage": "https://cdn.jsdelivr.net/gh/Meekdai/meekdai.github.io/logo64.jpg", "createdDate": "2024-06-21", "dateLabelColor": "#bc4c00"}, "P9": {"htmlDir": "docs/post/\u3010jar\u3011start_jar.sh.html", "labels": ["jar", "shell"], "postTitle": "\u3010jar\u3011start_jar.sh", "postUrl": "post/%E3%80%90jar%E3%80%91start_jar.sh.html", "postSourceUrl": "https://github.com/JabinSun/jabinsun.github.io/issues/9", "commentNum": 0, "wordCount": 1232, "description": "```shell\r\n#!/bin/bash\r\n# start  stop  restart\r\n#\u8fd9\u91cc\u53ef\u66ff\u6362\u4e3a\u81ea\u5df1\u7684\u6267\u884c\u7a0b\u5e8f\uff0c\u5176\u4ed6\u65e0\u9700\u66f4\u6539\r\nAPP_NAME='xxx.jar'\r\nCONFIG_NAME='application.properties'\r\n\r\n#\u4f7f\u7528\u8bf4\u660e\uff0c\u7528\u6765\u63d0\u793a\u8f93\u5165\u53c2\u6570\r\nusage() {\r\n    echo 'Usage: sh $0 [start|stop|restart|status]'\r\n    exit 1\r\n}\r\n\r\n#\u68c0\u67e5\u7a0b\u5e8f\u662f\u5426\u5728\u8fd0\u884c\r\nis_exist(){\r\n  pid=`ps -ef|grep $CONFIG_NAME |grep -v grep|awk '{print $2}' `\r\n  #\u5982\u679c\u4e0d\u5b58\u5728\u8fd4\u56de1\uff0c\u5b58\u5728\u8fd4\u56de0\r\n  if [ -z '${pid}' ]; then\r\n   return 1\r\n  else\r\n    return 0\r\n  fi\r\n}\r\n\r\n#\u542f\u52a8\u65b9\u6cd5\r\nstart(){\r\n  is_exist\r\n  if [ $? -eq '0' ]; then\r\n    echo '${APP_NAME} is already running. pid=${pid} .'\r\n  else\r\n    nohup java -server -jar -Xmx1024m $APP_NAME --spring.config.location=$CONFIG_NAME > /dev/null 2>&1 &\r\n    echo '${APP_NAME} start success'\r\n  fi\r\n}\r\n\r\n#\u505c\u6b62\u65b9\u6cd5\r\nstop(){\r\n  is_exist\r\n  if [ $? -eq '0' ]; then\r\n    kill -9 $pid\r\n  else\r\n    echo '${APP_NAME} is not running'\r\n  fi\r\n}\r\n\r\n#\u8f93\u51fa\u8fd0\u884c\u72b6\u6001\r\nstatus(){\r\n  is_exist\r\n  if [ $? -eq '0' ]; then\r\n    echo '${APP_NAME} is running. PID is ${pid}'\r\n  else\r\n    echo '${APP_NAME} is not running.'\r\n  fi\r\n}\r\n\r\n#\u91cd\u542f\r\nrestart(){\r\n  stop\r\n  start\r\n}\r\n\r\n#\u6839\u636e\u8f93\u5165\u53c2\u6570\uff0c\u9009\u62e9\u6267\u884c\u5bf9\u5e94\u65b9\u6cd5\uff0c\u4e0d\u8f93\u5165\u5219\u6267\u884c\u4f7f\u7528\u8bf4\u660e\r\ncase '$1' in\r\n  'start')\r\n    start\r\n    ;;\r\n  'stop')\r\n    stop\r\n    ;;\r\n  'status')\r\n    status\r\n    ;;\r\n  'restart')\r\n    restart\r\n    ;;\r\n  *)\r\n    usage\r\n    ;;\r\nesac\r\n\r\n```\u3002", "top": 0, "createdAt": 1718957635, "style": "", "script": "", "head": "", "ogImage": "https://cdn.jsdelivr.net/gh/Meekdai/meekdai.github.io/logo64.jpg", "createdDate": "2024-06-21", "dateLabelColor": "#bc4c00"}, "P10": {"htmlDir": "docs/post/\u3010sftp\u3011-chai-fen-ssh-he-sftp-fu-wu.html", "labels": ["sftp"], "postTitle": "\u3010sftp\u3011\u62c6\u5206ssh\u548csftp\u670d\u52a1", "postUrl": "post/%E3%80%90sftp%E3%80%91-chai-fen-ssh-he-sftp-fu-wu.html", "postSourceUrl": "https://github.com/JabinSun/jabinsun.github.io/issues/10", "commentNum": 0, "wordCount": 2264, "description": "### \u5206\u79bbSSH\u548cSFTP\u670d\u52a1\r\n\u7cfb\u7edf\u5185\u5f00\u542fssh\u670d\u52a1\u548csftp\u670d\u52a1\u90fd\u662f\u901a\u8fc7/usr/sbin/sshd\u8fd9\u4e2a\u540e\u53f0\u7a0b\u5e8f\u76d1\u542c22\u7aef\u2f1d\uff0c\u2f7dsftp\u670d\u52a1\u4f5c\r\n\u4e3a\u2f00\u4e2a\u2f26\u670d\u52a1\uff0c\u662f\u901a\u8fc7/etc/ssh/sshd_config\u914d\u7f6e\u2f42\u4ef6\u4e2d\u7684Subsystem\u5b9e\u73b0\u7684\uff0c\u5982\u679c\u6ca1\u6709\u914d\u7f6e\r\nSubsystem\u53c2\u6570\uff0c\u5219\u7cfb\u7edf\u662f\u4e0d\u80fd\u8fdb\u2f8fsftp\u8bbf\u95ee\u7684\u3002", "top": 0, "createdAt": 1719200432, "style": "", "script": "", "head": "", "ogImage": "https://cdn.jsdelivr.net/gh/Meekdai/meekdai.github.io/logo64.jpg", "createdDate": "2024-06-24", "dateLabelColor": "#bc4c00"}, "P11": {"htmlDir": "docs/post/\u3010python\u3011ssl_domain_check.py.html", "labels": ["python"], "postTitle": "\u3010python\u3011ssl_domain_check.py", "postUrl": "post/%E3%80%90python%E3%80%91ssl_domain_check.py.html", "postSourceUrl": "https://github.com/JabinSun/jabinsun.github.io/issues/11", "commentNum": 0, "wordCount": 1358, "description": "```python\r\nimport ssl\r\nimport datetime\r\nimport socket\r\nimport openpyxl\r\n\r\n\r\ndef get_certificate_expiry_date(hostname):\r\n    context = ssl.create_default_context()\r\n    conn = context.wrap_socket(socket.socket(socket.AF_INET), server_hostname=hostname)\r\n    conn.settimeout(5.0)\r\n    conn.connect((hostname, 443))\r\n    cert = conn.getpeercert()\r\n    conn.close()\r\n    cert_expiry_date = datetime.datetime.strptime(cert['notAfter'], '%b %d %H:%M:%S %Y GMT')\r\n    return cert_expiry_date\r\n\r\n\r\ndef check_https_support(domain):\r\n    try:\r\n        expiry_date = get_certificate_expiry_date(domain)\r\n        print(f'{domain}: HTTPS \u8bc1\u4e66\u5230\u671f\u65f6\u95f4: {expiry_date}')\r\n    except Exception as e:\r\n        print(f'{domain}: {e}')\r\n\r\n\r\nworkbook = openpyxl.Workbook()\r\nsheet = workbook.active\r\nsheet.title = 'HTTPS \u8bc1\u4e66\u5230\u671f\u65f6\u95f4'\r\nsheet['A1'] = '\u57df\u540d'\r\nsheet['B1'] = 'HTTPS \u8bc1\u4e66\u5230\u671f\u65f6\u95f4 or Error'\r\n\r\nwith open('url.txt', 'r') as file:\r\n    domains = file.readlines()\r\n    for i, domain in enumerate(domains, start=2):\r\n        domain = domain.strip()\r\n        try:\r\n            expiry_date = get_certificate_expiry_date(domain)\r\n            sheet[f'A{i}'] = domain\r\n            sheet[f'B{i}'] = expiry_date.strftime('%Y-%m-%d %H:%M:%S')\r\n        except Exception as e:\r\n            sheet[f'A{i}'] = domain\r\n            sheet[f'B{i}'] = str(e)\r\n\r\nworkbook.save('https_expiry_dates_new.xlsx')\r\n```\u3002", "top": 0, "createdAt": 1719209856, "style": "", "script": "", "head": "", "ogImage": "https://cdn.jsdelivr.net/gh/Meekdai/meekdai.github.io/logo64.jpg", "createdDate": "2024-06-24", "dateLabelColor": "#bc4c00"}, "P12": {"htmlDir": "docs/post/\u3010python\u3011generate_passwd.py.html", "labels": ["python"], "postTitle": "\u3010python\u3011generate_passwd.py", "postUrl": "post/%E3%80%90python%E3%80%91generate_passwd.py.html", "postSourceUrl": "https://github.com/JabinSun/jabinsun.github.io/issues/12", "commentNum": 0, "wordCount": 944, "description": "```python\r\nimport random\r\nimport string\r\nimport sys\r\n\r\n\r\ndef generate_password(length=16):\r\n    if length < 8:\r\n        raise ValueError('\u5bc6\u7801\u957f\u5ea6\u4e0d\u80fd\u5c11\u4e8e8\u4f4d')\r\n\r\n    all_chars = string.ascii_letters + string.digits + string.punctuation\r\n\r\n    password = [\r\n        random.choice(string.ascii_lowercase),\r\n        random.choice(string.ascii_uppercase),\r\n        random.choice(string.digits),\r\n        random.choice(string.punctuation)\r\n    ]\r\n\r\n    password += random.choices(all_chars, k=length - 4)\r\n\r\n    random.shuffle(password)\r\n\r\n    return ''.join(password)\r\n\r\n\r\nif __name__ == '__main__':\r\n    print(len(sys.argv))\r\n    if len(sys.argv) > 1:\r\n        try:\r\n            length = int(sys.argv[1])\r\n        except ValueError:\r\n            print('\u8bf7\u8f93\u5165\u4e00\u4e2a\u6709\u6548\u7684\u6574\u6570\u4f5c\u4e3a\u5bc6\u7801\u957f\u5ea6')\r\n            sys.exit(1)\r\n    else:\r\n        length = 16\r\n\r\n    try:\r\n        print(generate_password(length))\r\n    except ValueError as e:\r\n        print(e)\r\n        sys.exit(1)\r\n```\u3002", "top": 0, "createdAt": 1719209923, "style": "", "script": "", "head": "", "ogImage": "https://cdn.jsdelivr.net/gh/Meekdai/meekdai.github.io/logo64.jpg", "createdDate": "2024-06-24", "dateLabelColor": "#bc4c00"}, "P13": {"htmlDir": "docs/post/\u3010python\u3011webhook_server.py.html", "labels": ["python"], "postTitle": "\u3010python\u3011webhook_server.py", "postUrl": "post/%E3%80%90python%E3%80%91webhook_server.py.html", "postSourceUrl": "https://github.com/JabinSun/jabinsun.github.io/issues/13", "commentNum": 0, "wordCount": 1791, "description": "```python\r\nimport json\r\nimport os\r\nimport subprocess\r\nimport uuid\r\n\r\nfrom flask import Flask, jsonify, request\r\n\r\napp = Flask(__name__)\r\n\r\n#WEBHOOK_KEYS_FILE = '.webhook_keys.json'\r\nWEBHOOK_KEYS_FILE = os.environ.get('WEBHOOK_KEYS_FILE', '.webhook_keys.json')\r\n\r\n\r\ndef load_webhook_keys():\r\n    if os.path.exists(WEBHOOK_KEYS_FILE):\r\n        with open(WEBHOOK_KEYS_FILE, 'r') as f:\r\n            return json.load(f)\r\n    return {}\r\n\r\n\r\ndef save_webhook_keys(keys):\r\n    with open(WEBHOOK_KEYS_FILE, 'w') as f:\r\n        json.dump(keys, f)\r\n\r\n\r\nwebhook_keys = load_webhook_keys()\r\n\r\n\r\n@app.route('/getWebhookKey', methods=['GET'])\r\ndef get_webhook_key():\r\n    key = str(uuid.uuid4())\r\n    webhook_keys[key] = True\r\n    save_webhook_keys(webhook_keys)\r\n    return jsonify({'webhook_key': key}), 200\r\n\r\n\r\n@app.route('/webhook/<key>', methods=['POST'])\r\ndef handle_webhook(key):\r\n    if key in webhook_keys and webhook_keys[key] is True:\r\n        try:\r\n            data = request.get_json()\r\n            args = data.get('shell', [])\r\n            if not isinstance(args, list):\r\n                return jsonify({'status': 'error', 'error': 'Arguments should be a list'}), 400\r\n            result = subprocess.run(args,\r\n                                    check=True,\r\n                                    stdout=subprocess.PIPE,\r\n                                    stderr=subprocess.PIPE)\r\n            return jsonify({'status': 'success', 'output': result.stdout.decode('utf-8').splitlines()}), 200\r\n        except subprocess.CalledProcessError as e:\r\n            return jsonify({'status': 'error', 'error': e.stderr.decode('utf-8')}), 500\r\n    else:\r\n        return jsonify({'status': 'error', 'error': 'Invalid webhook key'}), 403\r\n\r\n\r\nif __name__ == '__main__':\r\n    app.run(host='0.0.0.0')\r\n```\u3002", "top": 0, "createdAt": 1719209984, "style": "", "script": "", "head": "", "ogImage": "https://cdn.jsdelivr.net/gh/Meekdai/meekdai.github.io/logo64.jpg", "createdDate": "2024-06-24", "dateLabelColor": "#bc4c00"}, "P14": {"htmlDir": "docs/post/\u3010shell\u3011docker_images_clean.sh.html", "labels": ["shell"], "postTitle": "\u3010shell\u3011docker_images_clean.sh", "postUrl": "post/%E3%80%90shell%E3%80%91docker_images_clean.sh.html", "postSourceUrl": "https://github.com/JabinSun/jabinsun.github.io/issues/14", "commentNum": 0, "wordCount": 1773, "description": "```shell\r\n#!/bin/bash\r\n# set -euxo pipefail\r\n\r\nSHELL_STEP=$1\r\nIMAGE_NAME_ITEM=$2\r\nIMAGE_DELETE_NUM=$3\r\n\r\n\r\nfunction echo_message_red() {\r\n\t  echo -e '\\033[31m ${ECHO_MESSAGE}\\033[0m'\r\n}\r\n\r\nfunction echo_message_green() {\r\n\t  echo -e '\\033[32m ${ECHO_MESSAGE}\\033[0m'\r\n}\r\n\r\nfunction echo_message_yellow() {\r\n\t  echo -e '\\033[33m ${ECHO_MESSAGE}\\033[0m'\r\n}\r\n\r\n\r\nfunction usage() {\r\n\t  ECHO_MESSAGE='Usage: sh $0 [all_status|status|help|remove|all_remove] \\n eg: \\n [sh $0 all_status] \\n [sh $0 status {IMAGE_NAME}] \\n [sh $0 remove {IMAGE_NAME} {IMAGE_DELETE_NUM}] \\n [sh $0 all_remove]'\r\n\t  echo_message_yellow\r\n\t  exit 1\r\n}\r\n\r\nfunction status_all() {\r\n\t  docker images|grep -v REPOSITORY|awk '{a[$1]++} END{for(i in a){print i,a[i]}}'|column -t|sort -t ' ' -rn -k 2\r\n}\r\n\r\nfunction status_item() {\r\n\t  ECHO_MESSAGE='Usage: [sh $0 status {IMAGE_NAME}]'\r\n\t  echo_message_yellow\r\n\t  if [[ -n ${IMAGE_NAME_ITEM} ]];then\r\n\t  \tdocker images|grep -v REPOSITORY|grep -e ${IMAGE_NAME_ITEM}\r\n\t  fi\r\n}\r\n\r\nfunction remove_item() {\r\n\t  ECHO_MESSAGE='Usage: [sh $0 remove {IMAGE_NAME} {IMAGE_NAME_DELETE_NUM}]'\r\n\t  echo_message_yellow\r\n\t  if [[ -n ${IMAGE_DELETE_NUM} ]]; then\r\n\t  \tIMAGE_DELETE=$(docker images|grep -v REPOSITORY|grep -e ${IMAGE_NAME_ITEM}|awk '{print $1,$2,$3}'|column -t|tail -n ${IMAGE_DELETE_NUM}|awk '{print $3}')\r\n\t  \techo ${IMAGE_DELETE}\r\n\t  \tdocker rmi ${IMAGE_DELETE}\r\n\t  fi\r\n}\r\n\r\nfunction remove_all() {\r\n\t  echo -e '\\033[33m Please use \\033[32m <docker image prune/docker image prune -a> \\033[0m \\033[0m'\r\n}\r\n\r\n\r\ncase '${SHELL_STEP}' in\r\n    'all_status')\r\n      status_all\r\n      ;;\r\n    'status')\r\n      status_item\r\n      ;;\r\n    'remove')\r\n      remove_item\r\n      ;;\r\n    'all_remove')\r\n      remove_all\r\n      ;;\r\n    *)\r\n      usage\r\n      ;;\r\nesac\r\n```\u3002", "top": 0, "createdAt": 1719211229, "style": "", "script": "", "head": "", "ogImage": "https://cdn.jsdelivr.net/gh/Meekdai/meekdai.github.io/logo64.jpg", "createdDate": "2024-06-24", "dateLabelColor": "#bc4c00"}, "P15": {"htmlDir": "docs/post/\u3010shell\u3011-etc-profile-huan-jing-bian-liang-she-zhi.html", "labels": ["shell"], "postTitle": "\u3010shell\u3011/etc/profile\u73af\u5883\u53d8\u91cf\u8bbe\u7f6e", "postUrl": "post/%E3%80%90shell%E3%80%91-etc-profile-huan-jing-bian-liang-she-zhi.html", "postSourceUrl": "https://github.com/JabinSun/jabinsun.github.io/issues/15", "commentNum": 0, "wordCount": 603, "description": "```shell\r\nvim /etc/profile\r\n==========\r\n# login audit format\r\nHISTTIMEFORMAT='%Y-%m-%d %H:%M:%S  `who am i` '\r\n\r\n# login script\r\n/usr/local/bin/login.sh\r\n\r\n# jdk env\r\nexport JAVA_HOME=/usr/local/jdk1.8.0_181\r\nexport JRE_HOME=/usr/local/jdk1.8.0_181/jre\r\nexport PATH=$JAVA_HOME/bin:$JRE_HOME/bin:$PATH\r\nexport CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib:$JAVA_HOME/jre/lib/rt.jar\r\n\r\n# maven env\r\nexport MAVEN_HOME=/usr/local/maven3\r\nexport PATH=$PATH:$MAVEN_HOME/bin\r\n\r\n# nodejs env\r\nexport NODEJS_HOME=/usr/local/nodejs12\r\nexport PATH=$PATH:$NODEJS_HOME/bin\r\n==========\r\n```\u3002", "top": 0, "createdAt": 1719211377, "style": "", "script": "", "head": "", "ogImage": "https://cdn.jsdelivr.net/gh/Meekdai/meekdai.github.io/logo64.jpg", "createdDate": "2024-06-24", "dateLabelColor": "#bc4c00"}, "P16": {"htmlDir": "docs/post/\u3010kubernetes\u3011k8s-chang-yong-shi-li.html", "labels": ["kubernetes"], "postTitle": "\u3010kubernetes\u3011k8s\u5e38\u7528\u793a\u4f8b", "postUrl": "post/%E3%80%90kubernetes%E3%80%91k8s-chang-yong-shi-li.html", "postSourceUrl": "https://github.com/JabinSun/jabinsun.github.io/issues/16", "commentNum": 0, "wordCount": 1290, "description": "```shell\r\n# \u67e5\u770bk8s\u67d0\u4e2a\u8282\u70b9requests\u548climits\r\nkubectl get pods --all-namespaces -o json | jq -c '.items[] | select(.spec.nodeName=='${NODENAME}') | {name: .metadata.name, namespace: .metadata.namespace, containers: .spec.containers[].resources}'\r\n\r\n# \u901a\u8fc7/var/lib/docker/overlay2/*\u67e5\u627e\u54ea\u4e2apod\u5360\u7528\u78c1\u76d8\u8f83\u5927\r\ndocker ps -aq | xargs -n 1 docker inspect --format '{{.Id}}, {{.Name}}, {{.GraphDriver.Data.WorkDir}}' | grep '6570df2379ab10da3c4a2984212ed8fa5841dc194fc3adf964f0f5c4dec7520b'\r\n\r\n# kubectl jsonpath usage\r\nkubectl get pods -n ${NAMESPACE} -o=jsonpath='{range .items[*]}[ {.metadata.name}, {.status.phase}, {.status.containerStatuses[0].state.running.startedAt} {.status.containerStatuses[0].image} ]{'\\n'}{end}'\r\n\r\nkubectl get pods -n ${NAMESPACE} -o jsonpath='{.items[*].spec.containers[*].image}' | tr -s '[[:space:]]' '\\n' | sort | uniq -c\r\n\r\nkubectl get pods -n ${NAMESPACE} -o jsonpath='{range .items[*]}{'\\n'}{.metadata.name}{':\\t'}{range .spec.containers[*]}{.image}{', '}{end}{end}' | sort\r\n\r\n# kubectl pod age usage\r\nkubectl get pods -A --no-headers | awk '$NF~/^[0-9]+[m|s]$/ {print $1, $2, $NF}' | column -t\r\n\r\n# kubectl cp usage\r\nkubectl cp -n ${NAMESPACE} ${POD}:/PATH/TO/REMOTE/FILE /PATH/TO/LOCAL/FILE\r\ntar cf - ${file} | kubectl exec -it -n ${NAMESPACE} ${POD} -- tar xf - -C ${path}\r\n```\u3002", "top": 0, "createdAt": 1719211663, "style": "", "script": "", "head": "", "ogImage": "https://cdn.jsdelivr.net/gh/Meekdai/meekdai.github.io/logo64.jpg", "createdDate": "2024-06-24", "dateLabelColor": "#bc4c00"}, "P17": {"htmlDir": "docs/post/\u3010mongodb\u3011mongodb-chang-yong-shi-li.html", "labels": ["mongodb"], "postTitle": "\u3010mongodb\u3011mongodb\u5e38\u7528\u793a\u4f8b", "postUrl": "post/%E3%80%90mongodb%E3%80%91mongodb-chang-yong-shi-li.html", "postSourceUrl": "https://github.com/JabinSun/jabinsun.github.io/issues/17", "commentNum": 0, "wordCount": 295, "description": "```sql\r\n-- test\u96c6\u5408\u521b\u5efa\u7d22\u5f15\r\ndb.test.createIndex( { 'eId_idx': 1 }, { unique: true } );\r\n\r\n-- test\u96c6\u5408\u67e5\u627e\u6570\u636e\r\ndb.test.find({eId: 'xxx'});\r\n\r\n-- \u67e5\u8be2mongodb\u7f13\u5b58\u9650\u5236\u548c\u5f53\u524d\u4f7f\u7528\u5185\u5b58\u5927\u5c0f\r\ndb.serverStatus().wiredTiger.cache['maximum bytes configured'];\r\ndb.serverStatus().wiredTiger.cache['bytes currently in the cache'];\r\n```\u3002", "top": 0, "createdAt": 1719211879, "style": "", "script": "", "head": "", "ogImage": "https://cdn.jsdelivr.net/gh/Meekdai/meekdai.github.io/logo64.jpg", "createdDate": "2024-06-24", "dateLabelColor": "#bc4c00"}, "P18": {"htmlDir": "docs/post/\u3010mysql\u3011mysql-chang-yong-shi-li.html", "labels": ["mysql"], "postTitle": "\u3010mysql\u3011mysql\u5e38\u7528\u793a\u4f8b", "postUrl": "post/%E3%80%90mysql%E3%80%91mysql-chang-yong-shi-li.html", "postSourceUrl": "https://github.com/JabinSun/jabinsun.github.io/issues/18", "commentNum": 0, "wordCount": 1390, "description": "```sql\r\n-- \u5f97\u5230\u6b63\u5728\u6267\u884c\u7684processlist_id\r\nSELECT\r\n\tid \r\nFROM\r\n\tinformation_schema.PROCESSLIST;\r\n\r\n-- \u5f97\u5230\u4e0eprocesslist_id\u5bf9\u5e94\u7684thread_id\r\nSELECT\r\n\tthread id \r\nFROM\r\n\tPERFORMANCE_SCHEMA.threads \r\nWHERE\r\n\tprocesslist_id IN (\u4e0a\u4e00\u6b65\u62ff\u5230\u7684 processlist_id\u5217\u8868 );\r\n\r\n-- \u5f97\u5230\u6b63\u5728\u6267\u884c\u7684sql\u8bed\u53e5\r\nSELECT\r\n\tthread_id,\r\n\tsql_text \r\nFROM\r\n\tPERFORMANCE_SCHEMA.events_statements_current \r\nWHERE\r\n\tthread_id IN (\u4e0a\u4e00\u6b65\u62ff\u5230\u7684 thread_id\u8868 );\r\n\r\n-- \u5f97\u5230\u5b8c\u6574sql(\u67e5\u8be2\u54ea\u6761sql\u4e00\u76f4\u5728\u6267\u884c)\r\nSELECT p.id AS processlist_id, t.thread_id, e.sql_text\r\nFROM information_schema.processlist AS p\r\nJOIN performance_schema.threads AS t ON t.processlist_id = p.id\r\nJOIN performance_schema.events_statements_current AS e ON e.thread_id = t.thread_id\r\nWHERE p.id IN (SELECT id FROM information_schema.processlist);\r\n```\r\n\r\n```sql\r\n--\u67e5\u8be2\u8868\u662f\u5426\u5b58\u5728\r\nSELECT\r\n\ttable_name,\r\n\ttable_schema,\r\n\tcreate_time\r\nFROM\r\n\tinformation_schema.TABLES\r\nWHERE\r\n\ttable_name = 'TABLE_NAME';\r\n```\r\n\r\n```sql\r\n-- \u67e5\u8be2\u8868\u521b\u5efa\u65f6\u95f4\r\nSELECT\r\n\ttable_schema,\r\n\ttable_name,\r\n\tcreate_time \r\nFROM\r\n\tinformation_schema.TABLES \r\nWHERE\r\n\ttable_name = 'TABLE_NAME';\r\n```\r\n\r\n```sql\r\n-- \u67e5\u8be2\u8868\u662f\u5426\u5b58\u5728\u67d0\u4e2a\u5b57\u6bb5\r\nselect\r\n\tTABLE_SCHEMA as 'DB_NAME',\r\n\tTABLE_NAME as 'TABLE_NAME',\r\n\tCOLUMN_NAME as 'COLUMN_NAME'\r\nfrom\r\n\tinformation_schema.COLUMNS\r\nwhere\r\n\tTABLE_SCHEMA in ('db1', 'db2')\r\n\tand TABLE_NAME = 'tbl'\r\n\tand COLUMN_NAME in ('c1', 'c2');\r\n```\r\n\r\n```sql\r\n-- \u67e5\u8be2\u8868\u662f\u5426\u5b58\u5728\u67d0\u4e2a\u7d22\u5f15\r\nshow index from DB_NAME.TABLE_NAME where Key_name = 'INDEX_NAME';\r\n```\u3002", "top": 0, "createdAt": 1719212538, "style": "", "script": "", "head": "", "ogImage": "https://cdn.jsdelivr.net/gh/Meekdai/meekdai.github.io/logo64.jpg", "createdDate": "2024-06-24", "dateLabelColor": "#bc4c00"}, "P19": {"htmlDir": "docs/post/\u3010shell\u3011container_images_clean.sh.html", "labels": ["shell", "container"], "postTitle": "\u3010shell\u3011container_images_clean.sh", "postUrl": "post/%E3%80%90shell%E3%80%91container_images_clean.sh.html", "postSourceUrl": "https://github.com/JabinSun/jabinsun.github.io/issues/19", "commentNum": 0, "wordCount": 148, "description": "```shell\r\ncrictl images | awk 'NR>1 {print $1}' | sort | uniq -c | sort -rn\r\ncrictl rmi $(crictl images | grep 'xxx' | awk '{print $1 ':' $2}')\r\n```\u3002", "top": 0, "createdAt": 1720687175, "style": "", "script": "", "head": "", "ogImage": "https://cdn.jsdelivr.net/gh/Meekdai/meekdai.github.io/logo64.jpg", "createdDate": "2024-07-11", "dateLabelColor": "#bc4c00"}, "P20": {"htmlDir": "docs/post/\u3010eck\u3011eck-bu-shu-ri-zhi-xi-tong.html", "labels": ["elasticsearch", "kibana"], "postTitle": "\u3010eck\u3011eck\u90e8\u7f72\u65e5\u5fd7\u7cfb\u7edf", "postUrl": "post/%E3%80%90eck%E3%80%91eck-bu-shu-ri-zhi-xi-tong.html", "postSourceUrl": "https://github.com/JabinSun/jabinsun.github.io/issues/20", "commentNum": 0, "wordCount": 4841, "description": "> Kubernetes 1.26-1.30\uff08ECK2.14.0\uff0c\u4f4e\u7248\u672c\u53ef\u4ee5\u652f\u6301\u4f4e\u7248\u672c\u7684K8S\uff0c\u8bf7\u81ea\u884c\u5230\u5b98\u7f51\u67e5\u770b\u3002", "top": 0, "createdAt": 1727332074, "style": "", "script": "", "head": "", "ogImage": "https://cdn.jsdelivr.net/gh/Meekdai/meekdai.github.io/logo64.jpg", "createdDate": "2024-09-26", "dateLabelColor": "#bc4c00"}, "P21": {"htmlDir": "docs/post/\u3010shell\u3011log.sh.html", "labels": ["shell"], "postTitle": "\u3010shell\u3011log.sh", "postUrl": "post/%E3%80%90shell%E3%80%91log.sh.html", "postSourceUrl": "https://github.com/JabinSun/jabinsun.github.io/issues/21", "commentNum": 0, "wordCount": 492, "description": "```shell\r\n#!/bin/bash\r\n\r\nlog::error() {\r\n  printf '[$(date +'%Y-%m-%dT%H:%M:%S.%2N%z')] - [\\033[0;31mERROR\\033[0m] - %s\\n' '$@'  \r\n}\r\n\r\nlog::info() {\r\n  printf '[$(date +'%Y-%m-%dT%H:%M:%S.%2N%z')] - [\\033[0;32mINFO\\033[0m] - %s\\n' '$@'   \r\n}\r\n\r\nlog::warning() {\r\n  printf '[$(date +'%Y-%m-%dT%H:%M:%S.%2N%z')] - [\\033[1;33mWARNING\\033[0m] - %s\\n' '$@'\r\n}\r\n\r\nlog::info 'This is an informational message.'\r\nlog::warning 'This is a warning message.'\r\nlog::error 'This is an error message.'\r\n```\u3002", "top": 0, "createdAt": 1731376993, "style": "", "script": "", "head": "", "ogImage": "https://cdn.jsdelivr.net/gh/Meekdai/meekdai.github.io/logo64.jpg", "createdDate": "2024-11-12", "dateLabelColor": "#bc4c00"}}, "singeListJson": {}, "labelColorDict": {"Blog": "#BFD4F2", "bug": "#d73a4a", "container": "#B7F095", "crontab": "#DFCD66", "Dockerfile": "#A425E0", "documentation": "#0075ca", "duplicate": "#cfd3d7", "elasticsearch": "#984A57", "enhancement": "#a2eeef", "etcd": "#226E3F", "good first issue": "#7057ff", "help wanted": "#008672", "invalid": "#e4e669", "jar": "#D3DC98", "jenkins": "#402B1A", "kibana": "#bfd4f2", "kubernetes": "#888766", "mongodb": "#BA6F8B", "mysql": "#A8E9A6", "openssl": "#D6612A", "python": "#EB4401", "question": "#d876e3", "sftp": "#8A3084", "shell": "#6D0145", "wontfix": "#ffffff"}, "displayTitle": "DevOps Blog", "faviconUrl": "https://github.githubassets.com/favicons/favicon.svg", "primerCSS": "<link href='https://mirrors.sustech.edu.cn/cdnjs/ajax/libs/Primer/21.0.7/primer.css' rel='stylesheet' />", "homeUrl": "https://jabinsun.github.io", "prevUrl": "/index.html", "nextUrl": "disabled"}